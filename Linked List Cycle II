/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if(head==null){
            return null;
        }
        ListNode slow = head;
        ListNode fast = head;
        ListNode now = head;
        while(fast.next!=null&&fast.next.next!=null){
            fast = fast.next.next;
            slow = slow.next;
            if(fast==slow){
                now = slow;
                break;
            }
        }
        if(fast.next==null||fast.next.next==null)
            return null;
        else{
            ListNode  start = head;
            while(start!=now){
                start = start.next;
                now = now.next;
            }
            return start;
        }
    }
}
