/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        ArrayList<Integer> list = new ArrayList<Integer>();
        if(root==null){
            
        }
        else{
            if(root!=null&&root.left!=null&&root.right!=null){
                list.add(root.val);
                list.addAll(preorderTraversal(root.left));
                list.addAll(preorderTraversal(root.right));
            }
            else if(root!=null&&root.left==null&&root.right!=null){
                list.add(root.val);
                list.addAll(preorderTraversal(root.right));
            }
            else if(root!=null&&root.left!=null&&root.right==null){
                list.add(root.val);
                list.addAll(preorderTraversal(root.left));
            }
            else{
                list.add(root.val);
            }
        }
        return list;
    }
}
