/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode sortedArrayToBST(int[] num) {
        if(num.length<=0){
            return null;
        }
        int mid = num.length/2;
        TreeNode root= new TreeNode(num[mid]);
        root.left = createNode(num,0,mid-1);
        root.right = createNode(num,mid+1,num.length-1);
        return root;
    }

 public TreeNode createNode(int[] num,int i,int j){
        if(i>j){
            return null;
        }
        else if(i==j){
            TreeNode newNode = new TreeNode(num[i]);
            return newNode;
        }
        else{
            int mid = (i+j)/2;
            TreeNode newNode = new TreeNode(num[mid]);
            TreeNode leftNode = createNode(num,i,mid-1);  
            TreeNode rightNode = createNode(num,mid+1,j);      
            newNode.left = leftNode;
            newNode.right = rightNode;
            return newNode;    
        }
    }
}
