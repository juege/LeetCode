/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if(root==null) return;
        Queue<TreeLinkNode> queue = new LinkedList<TreeLinkNode>();
        queue.add(root);
        while(queue.size()>0){
            Queue<TreeLinkNode> tempQueue = new LinkedList<TreeLinkNode>();
            TreeLinkNode temp = queue.poll();
            tempQueue.add(temp);
            temp.next = null;
            TreeLinkNode first = temp;
            while(queue.size()>0){
                TreeLinkNode last = queue.poll();
                tempQueue.add(last);
                last.next = first;
                first = last;
            }
            while(tempQueue.size()>0){
                TreeLinkNode temp2 = tempQueue.poll();
                if(temp.right!=null)
                    queue.add(temp2.right);
                if(temp.left!=null)
                    queue.add(temp2.left);
            }
        }
    }
}
